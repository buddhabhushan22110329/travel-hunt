'use strict';

const fs        = require('fs')
const path      = require('path')
const pdfKit    = require('pdfkit');
const qr        = require('qr-image');
const SVGtoPDF  = require('svg-to-pdfkit');
const moment    = require('moment');
const numeral   = require('numeral');
var   i18n      = require('./i18n');

function toHuf(angka,forint){
  var rev     = parseInt(angka, 10).toString().split('').reverse().join('');
  var rev2    = '';
  for(var i = 0; i < rev.length; i++){
      rev2  += rev[i];
      if((i + 1) % 3 === 0 && i !== (rev.length - 1)){
          rev2 += ' ';
      }
  }
  return rev2.split('').reverse().join('') + ' ' + forint;
}

/* return true, if the input is not empty */
function notEmpty(text) {
  if (typeof text !== "undefined")
  {
    return (text !== "");
  } else {
    return false;
  }
}

var TEXT_SIZE = 8;
var CONTENT_LEFT_PADDING = 50;
var CONTENT_RIGHT_MARGIN = 540;

//Total
var totalNetAmount = 0;
var totalGrossAmount = 0;
var totalVatAmount = new Array();

function PDFInvoice(_ref) {
  var seller = _ref.seller;
  var buyer = _ref.buyer;
  var headline = _ref.headline;
  var items = _ref.items;

  var date = new Date();
  var charge = {
    createdAt:  date.getFullYear() + '-' + date.getMonth() + '-' + date.getDay(),
    amount: items.reduce(function (acc, item) {
      return acc + item.amount;
    }, 0)
  };
  var doc = new pdfKit({ size: 'A4', margin: 30, bufferPages: true });

  doc.fillColor('#333333');
  doc.registerFont('NotoSans', path.join(__dirname,'fonts', 'NotoSans-Regular.ttf') );
  doc.registerFont('DejaVuSans', path.join(__dirname,'fonts', 'DejaVuSans.ttf') );
  doc.font('NotoSans');

  var translate = i18n[PDFInvoice.lang];
  moment.locale(PDFInvoice.lang);

  doc.info.Title = translate['Invoice'];
  doc.info.Author = 'DreamInvoice';

  var divMaxWidth = 550;
  var table = {
    x: CONTENT_LEFT_PADDING,
    y: 200,
    inc: 90
  };

  return {
    genHeader: function genHeader() {

      //Watermark
      this.genWatermark();

      //Head
      if (headline.hasOwnProperty('createdAt') && notEmpty(headline.createdAt)) {
        doc
          .fillColor('#CCCCCC').fontSize((TEXT_SIZE+2)).text(moment(headline.createdAt).format('YYYY MMMM DD'), 30, 27, {align: 'right', width: doc.page.width-80})
          .fillColor('#CCCCCC').fontSize((TEXT_SIZE+2)*2).text('[ '+headline.invoiceId+' ]', 10, 15, {align: 'center' });
      }
      doc.fontSize((TEXT_SIZE+2)*2).fillColor('#777777').text(translate['Invoice'], 30, 15, {align: 'left' });   

      //Line before seller and buyer
      doc.moveTo(CONTENT_LEFT_PADDING, 45).lineTo(CONTENT_RIGHT_MARGIN, 45).stroke();

      //Seller
      doc.fillColor('#333333').fontSize(TEXT_SIZE+1).text(translate['seller']+':', CONTENT_LEFT_PADDING, 50, {width: 240});
      doc.fillColor('#333333').fontSize(TEXT_SIZE+2).text(seller.name, CONTENT_LEFT_PADDING + 2, doc.y, {width: 240}, );
      doc.fillColor('#666666').fontSize(TEXT_SIZE).text(translate['address']+': '+seller.address, {width: 240});
      //Phone Number
      if (seller.hasOwnProperty('phone') && notEmpty(seller.phone)) {
        doc.fillColor('#666666').fontSize(TEXT_SIZE).text(translate['phone']+': '+seller.phone, {width: 240});
      }
      //Email Address
      if (seller.hasOwnProperty('email') && notEmpty(seller.email)) {
        doc.fillColor('#666666').fontSize(TEXT_SIZE).text(translate['email']+': '+seller.email, {width: 240});
      }   
      //VAT Number
      if (seller.hasOwnProperty('vat') && notEmpty(seller.vat)) {
        doc.fillColor('#666666').fontSize(TEXT_SIZE).text(translate['vat']+': '+seller.vat, {width: 240});
      } 
      //EU VAT number
      if (seller.hasOwnProperty('eu_vat') && notEmpty(seller.eu_vat)) {
        doc.fillColor('#666666').fontSize(TEXT_SIZE).text(translate['eu_vat']+': '+seller.eu_vat, {width: 240});
      }                
      //Bank Account Number
      if (seller.hasOwnProperty('bank_acc') && notEmpty(seller.bank_acc)) {
        doc.fillColor('#666666').fontSize(TEXT_SIZE).text(translate['bank_acc']+': '+seller.bank_acc, {width: 240});
      }   
      
      //Offset, if seller column longer
      let sellerOffset = doc.currentLineHeight()+doc.y.valueOf();

      //Buyer
      doc.fillColor('#333333').fontSize(TEXT_SIZE+1).text(translate['buyer']+':', 300, 50, {width: 240});
      doc.fillColor('#333333').fontSize(TEXT_SIZE+2).text(buyer.name, 302, doc.y, {width: 240});
      doc.fillColor('#666666').fontSize(TEXT_SIZE).text(translate['address']+': '+buyer.address, {width: 240});
      //Phone Number
      if (buyer.hasOwnProperty('phone') && notEmpty(buyer.phone)) {
        doc.fillColor('#666666').fontSize(TEXT_SIZE).text(translate['phone']+': '+buyer.phone, {width: 240});
      }
      //Email Address
      if (buyer.hasOwnProperty('email') && notEmpty(buyer.email)) {
        doc.fillColor('#666666').fontSize(TEXT_SIZE).text(translate['email']+': '+buyer.email, {width: 240});
      }
      //VAT Number
      if (buyer.hasOwnProperty('vat') && notEmpty(buyer.vat)) {
        doc.fillColor('#666666').fontSize(TEXT_SIZE).text(translate['vat']+': '+buyer.vat, {width: 240});
      } 
      //EU VAT number
      if (buyer.hasOwnProperty('eu_vat') && notEmpty(buyer.eu_vat)) {
        doc.fillColor('#666666').fontSize(TEXT_SIZE).text(translate['eu_vat']+': '+buyer.eu_vat, {width: 240});
      }                
      //Bank Account Number
      if (buyer.hasOwnProperty('bank_acc') && notEmpty(buyer.bank_acc)) {
        doc.fillColor('#666666').fontSize(TEXT_SIZE).text(translate['bank_acc']+': '+buyer.bank_acc, {width: 240});
      }         

      //Offset, if buyer column longer
      let buyerOffset = doc.currentLineHeight()+doc.y.valueOf();

      //Calculate offset
      var borderOffset = Math.max(sellerOffset,buyerOffset);
      //Vertical line
      doc.moveTo(((CONTENT_LEFT_PADDING+CONTENT_RIGHT_MARGIN)/2)-5, 45).lineTo(((CONTENT_LEFT_PADDING+CONTENT_RIGHT_MARGIN)/2)-5, borderOffset).stroke();
      //Horizontal final line
      doc.moveTo(CONTENT_LEFT_PADDING, borderOffset).lineTo(CONTENT_RIGHT_MARGIN, borderOffset).stroke();

      //Invoice Headline Captions
      doc.fontSize(TEXT_SIZE).fillColor('#555555').text(translate['createdAt']+':', CONTENT_LEFT_PADDING+5, borderOffset+15, {align: 'left' }); 
      doc.fontSize(TEXT_SIZE).fillColor('#555555').text(translate['completionDate']+':', CONTENT_LEFT_PADDING+105, borderOffset+15, {align: 'left' }); 
      doc.fontSize(TEXT_SIZE).fillColor('#555555').text(translate['paymentDeadline']+':', CONTENT_LEFT_PADDING+205, borderOffset+15, {align: 'left' }); 
      doc.fontSize(TEXT_SIZE).fillColor('#555555').text(translate['paymentMethod']+':', CONTENT_LEFT_PADDING+305, borderOffset+15, {align: 'left' }); 
      doc.fontSize(TEXT_SIZE).fillColor('#555555').text(translate['invoiceId']+':', CONTENT_LEFT_PADDING+405, borderOffset+15, {align: 'left' }); 
      //Invoice Headline Values
      if (headline.hasOwnProperty('createdAt') && notEmpty(headline.createdAt)) {
        doc.fillColor('#666666').fontSize(TEXT_SIZE+3).text(moment(headline.createdAt).format('YYYY MMM DD.'), CONTENT_LEFT_PADDING+5, borderOffset+30, {width: 90, align: 'right'});
      }     
      if (headline.hasOwnProperty('completionDate') && notEmpty(headline.completionDate)) {
        doc.fillColor('#666666').fontSize(TEXT_SIZE+3).text(moment(headline.completionDate).format('YYYY MMM DD.'), CONTENT_LEFT_PADDING+105, borderOffset+30, {width: 90, align: 'right'});
      } 
      if (headline.hasOwnProperty('paymentDeadline') && notEmpty(headline.paymentDeadline)) {
        doc.fillColor('#666666').fontSize(TEXT_SIZE+3).text(moment(headline.paymentDeadline).format('YYYY MMM DD.'), CONTENT_LEFT_PADDING+205, borderOffset+30, {width: 90, align: 'right'});
      } 
      if (headline.hasOwnProperty('paymentMethod') && notEmpty(headline.paymentMethod)) {
        doc.fillColor('#666666').fontSize(TEXT_SIZE+3).text(headline.paymentMethod, CONTENT_LEFT_PADDING+305, borderOffset+30, {width: 90, align: 'right'});
      } 
      if (headline.hasOwnProperty('invoiceId') && notEmpty(headline.invoiceId)) {
        // Smaller font, if the id is too long...
        if (headline.invoiceId.length > 12)
        {
          doc.fillColor('#666666').fontSize(TEXT_SIZE+1).text(headline.invoiceId, CONTENT_LEFT_PADDING+405, borderOffset+30, {width: 80, align: 'right'});
        }
        else {
          doc.fillColor('#666666').fontSize(TEXT_SIZE+3).text(headline.invoiceId, CONTENT_LEFT_PADDING+405, borderOffset+30, {width: 80, align: 'right'});
        }
        //Set subject to InvoiceID
        doc.info.Subject = headline.invoiceId;
      } 

      //Horizontal line before headline
      doc.strokeColor('#999999').moveTo(CONTENT_LEFT_PADDING, borderOffset+10).lineTo(CONTENT_RIGHT_MARGIN, borderOffset+10).stroke();
      //Vertical lines in headline
      doc.strokeColor('#666666').moveTo(CONTENT_LEFT_PADDING+100, borderOffset+10).lineTo(CONTENT_LEFT_PADDING+100, borderOffset+50).stroke();
      doc.strokeColor('#666666').moveTo(CONTENT_LEFT_PADDING+200, borderOffset+10).lineTo(CONTENT_LEFT_PADDING+200, borderOffset+50).stroke();
      doc.strokeColor('#666666').moveTo(CONTENT_LEFT_PADDING+300, borderOffset+10).lineTo(CONTENT_LEFT_PADDING+300, borderOffset+50).stroke();
      doc.strokeColor('#666666').moveTo(CONTENT_LEFT_PADDING+400, borderOffset+10).lineTo(CONTENT_LEFT_PADDING+400, borderOffset+50).stroke();
      //Horizontal line after headline
      doc.strokeColor('#333333').moveTo(CONTENT_LEFT_PADDING, borderOffset+50).lineTo(CONTENT_RIGHT_MARGIN, borderOffset+50).stroke();

      //Set table initial top
      table.y = borderOffset + 75;

      doc.strokeColor('#cccccc').moveTo(CONTENT_LEFT_PADDING, borderOffset).lineTo(divMaxWidth, borderOffset);

    },

    genTableHeaders: function genTableHeaders() {
      ['quantity', 'name', 'unit_price', 'net_price', 'vat_amount', 'amount'].forEach(
        function (text, i) 
        {
          var voffset = table.inc;
          if (i == 1) {voffset = 50;}
          if (i == 2) {voffset = 105;}
          if (i == 3) {voffset = 95;}
          doc.fillColor('#333333').fontSize(TEXT_SIZE).text(translate[text], table.x + i * voffset, table.y);
        });
    },

    genTableLines: function genTableLines() {
      var offset = doc.currentLineHeight() + 2;
      doc.strokeColor('#cccccc').moveTo(table.x, table.y + offset).lineTo(divMaxWidth, table.y + offset).stroke();
    },

    genWatermark: function genWatermark() {
      //Watermark
      doc.rotate(10).fontSize((TEXT_SIZE)*16).fillColor('#FDFDFD').text(translate['Invoice'], 90, 50, {align: 'center' }).rotate(-10).fontSize((TEXT_SIZE)*9).text('DreamInvoice',30,((doc.page.height / 2) - (TEXT_SIZE*9)/2), {align: 'center' });
    },


    genTableRow: function genTableRow() {
      var szamlazo_obj = this;
      var pagedItemsNumber=0;
      // Force empty total counters
      totalNetAmount = 0;
      totalGrossAmount = 0;
      totalVatAmount = [];
      // Generate invoice lines
      items.map(function (item) {
        // Calculate total lines
        totalNetAmount+=numeral(item.net_price).value();
        totalGrossAmount+=numeral(item.amount).value();
        // Calculate current line VAT rate (maximum 2 decimal)
        let curretnVatRate = ( parseFloat( ( numeral(item.vat_amount).value() / numeral(item.net_price).value() ).toFixed(2)) * 100);
        if (isNaN(curretnVatRate)) {curretnVatRate = 0;}
        // Set zero if not yet present in the table
        if (isNaN(totalVatAmount[curretnVatRate])) { totalVatAmount[curretnVatRate] = 0; }
        // Add to total VAT amount table
        totalVatAmount[curretnVatRate]+=numeral(item.vat_amount).value();

        return Object.assign({}, item, {
          //Gross price
          amount: toHuf(numeral(item.amount).value(),translate['forint']),
          unit_price: toHuf(numeral(item.unit_price).value(),translate['forint']),
          //Net price
          net_price: toHuf(numeral(item.net_price).value(),translate['forint']),
          vat_amount: toHuf(numeral(item.vat_amount).value(),translate['forint'])+' ('+curretnVatRate+'%)'
        });
      }).forEach(function (item, itemIndex) {
        //First line
        ['quantity', 'name', 'unit_price', 'net_price', 'vat_amount', 'amount'].forEach(function (field, i) 
        {
          //Data row
          var voffset = table.inc;
          if (i == 1) {voffset = 50;}
          if (i == 2) {voffset = 105;}
          if (i == 3) {voffset = 95;}
          doc.fontSize(TEXT_SIZE).fillColor('#555555').text(item[field], table.x + i * voffset, table.y + TEXT_SIZE + 5 + (2*(itemIndex-pagedItemsNumber)) * 17);
        });
        //Secound line
        ['description'].forEach(function (field, i) 
        {
          //Data row
          var voffset = table.inc;
          doc.fontSize(TEXT_SIZE).fillColor('#555555').text(item[field], 50+table.x + i * voffset, (table.y + TEXT_SIZE + 5 + (2*(itemIndex-pagedItemsNumber)+1) * 17));
        });
        //Vertical line
        var offset = doc.y - table.y + 4;
        doc.moveTo(table.x, table.y + offset).lineTo(divMaxWidth, table.y + offset).stroke();
        //Start new page when needed...
        if (doc.y > 750) {
          doc.addPage();
          //Watermark
          szamlazo_obj.genWatermark();
          //if (pagedItemsNumber == 0) {pagedItemsNumber=1;}
          pagedItemsNumber += (itemIndex-pagedItemsNumber+1);
          table.y = 50;
          //Repeat Header
          szamlazo_obj.genTableHeaders();
          szamlazo_obj.genTableLines();
        }
      });
    },

    genFooter: function genFooter() {
      //Add new page, if not fits to the current page bottom
      if (doc.y > 680) {
        doc.addPage();
        //Watermark
        this.genWatermark();
      }
      const footerTop = 680;
      doc.fillColor('#cccccc');
      //WaterMark
      doc.fontSize((TEXT_SIZE)*9).fillColor('#FDFDFD').text(translate['total'],20,footerTop+2,{align: 'left' }); 
      doc.fontSize((TEXT_SIZE)*4).fillColor('#FDFDFD').text(toHuf(totalGrossAmount,translate['forint']),CONTENT_LEFT_PADDING,footerTop+80,{align: 'right' });
      //Subtotal and total lines
      doc.fontSize((TEXT_SIZE)+2).fillColor('#333333').text(translate['totalNetAmount'] + ': ' + toHuf(totalNetAmount,translate['forint']),CONTENT_LEFT_PADDING,footerTop+25,{align: 'right' });
      totalVatAmount.map(function (item, index) {
        // Write only not null 
        if (item != 0)
        {
          doc.text(index+'% '+translate['totalVatAmount']+': '+toHuf(item,translate['forint']),{align: 'right' });
        }
      });
      doc.strokeColor('#333333').fontSize((TEXT_SIZE)+4).text(translate['totalGrossAmount'] + ': ' + toHuf(totalGrossAmount,translate['forint']),{align: 'right', underline: true });
      if (headline.hasOwnProperty('commentText') && notEmpty(headline.commentText)) {
        doc.moveDown().fillColor('#999999').fontSize((TEXT_SIZE)+1).text(headline.commentText,CONTENT_LEFT_PADDING,doc.y,{align: 'justify'}); 
      }

      //Add Page Numbers
      const range = doc.bufferedPageRange();
      for( let i = range.start; i <  (range.start + range.count); i++) {
        doc.switchToPage(i);
        //Page counter circle
        doc.strokeColor('#DDDDDD').circle(0, (doc.page.height), 45).dash(5, 10).stroke();
        doc.strokeColor('#DDDDDD').circle(doc.page.width, 0 , 50).dash(10, 10).stroke();
        //Top corner QR code
        if (headline.hasOwnProperty('invoiceId') && notEmpty(headline.invoiceId)) {
          var svg_string = qr.imageSync(headline.invoiceId, { type: 'svg', size: 2 });
          SVGtoPDF(doc, svg_string, doc.page.width-35.5, 1);
        }
        //Page counter
        var pageNumberText=(i+1)+'/'+range.count;
        doc.fontSize((TEXT_SIZE)).fillColor('#AAAAAA').text(pageNumberText, 10, doc.page.height-20, {height: 10});
        //Ad.
        if (headline.hasOwnProperty('madeWith') && notEmpty(headline.madeWith)) {
          doc.fontSize((TEXT_SIZE)).fillColor('#AAAAAA').text(headline.madeWith, ((doc.page.width / 2) - 150), (doc.page.height - 35), {width : 300, height: 30, align: 'center'});
        }
        else {
          doc.fontSize((TEXT_SIZE)).fillColor('#AAAAAA').text(translate['madeWith'], ((doc.page.width / 2) - 150), (doc.page.height - 35), {width : 300, height: 30, align: 'center'});
        }
        
      }

      doc.flushPages();

    },    

    generate: function generate() {
      this.genHeader();
      this.genTableHeaders();
      this.genTableLines();
      this.genTableRow();
      this.genFooter();

      doc.end();
    },


    get pdfkitDoc() {
      return doc;
    }
  };
}

PDFInvoice.lang = 'hu_HU';

module.exports = PDFInvoice;
